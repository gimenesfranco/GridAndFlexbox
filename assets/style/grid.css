.banner {
    display: grid;
    gap: 1rem;
}

.banner img:nth-child(1) {
    grid-column: 1/3;
}

.banner img:nth-child(4) {
    grid-column: 2/3;
    grid-row: 2/4;
}

.eventos__item {
    display: grid;
    grid-template-columns: 1fr auto;
    grid-template-rows: auto repeat(2, 1fr) auto;
    grid-template-areas:
    "imagem imagem"
    "nome nome"
    "data data"
    "local botao";
}

.eventos__item img {
    grid-area: imagem;
}

.eventos__item h3 {
    grid-area: nome;
    align-self: center;
}

.eventos__item h4 {
    grid-area: data;
}

.eventos__item h5 {
    grid-area: local;
    align-self: end;
}

.eventos__item button {
    grid-area: botao;
}

/* Agenda */

.agenda__item {
    display: grid;
    grid-template-columns: repeat (2, 1fr);
    grid-template-rows:  auto 1fr;
    /* grid-template-areas: 
    "imagem imagem"
    "data evento"; */
}

.agenda__item img {
    grid-column: 1/ 3;
    /* grid-area: imagem; */
}


@media (min-width: 720px) {

    .banner {
        grid-template-columns: calc(50% - 0.75rem) auto auto;
        column-gap: 1.5rem;
    }

    .banner img:nth-child(1) {
        grid-column: 1/2;
        grid-row: 1/3;
    }

    .banner img:nth-child(4){
        grid-column: 3/4;
        grid-row: 1/3;
    }
}

/* 
A seguir irei colocar algumas instruções que irão te ajudar a solucionar esse desafio, vamos lá!

Não esqueça de criar um bloco com @media (min-width: 1440px) {} ao final do arquivo grid.css para alocar todo o código que você irá construir.
Esse layout possui um espaçamento entre linhas de 1rem e um espaçamento entre colunas de 1.5rem.
O layout é composto de 2 colunas e 3 linhas.
Em relação a largura, terá a mesma proporção e lógica que o banner teve para as telas a partir de 720px, onde foi utilizado a função calc.
Já as linhas, a primeira e a última possuem a mesma altura dos elementos que ocupam e a linha do meio possui a altura restante que sobrou do container.
Para posicionar cada grid item, você pode utilizar as grid lines (grid-row / grid-column), mas recomendo criar áreas no template e nomeá-las (grid-area).

*/
@media (min-width: 1440px) {
    .categorias {
        display: grid;
        grid-template-areas:
        "titulo titulo"
        "lista destaque"
        "lista imagem";
        row-gap: 1rem;
        column-gap: 1.5rem;
        grid-template-columns: calc(50% - 0.75rem);
        grid-template-rows: auto 1fr auto;
    }

    .categorias__titulo {
        grid-area: titulo;
    }
    
    .categorias__lista {
        grid-area: lista;
     }
    
    .categorias__destaques {
        grid-area: destaque;
    }
    
    .categorias__imagem {
        grid-area: imagem;
    }
}

